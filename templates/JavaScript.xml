<templateSet group="JavaScript">
  <template name="rest:try" value="try{&#10;    $END$&#10;    res.status(200).send({&#10;        success: true&#10;    })&#10;}catch(e){&#10;    helper.internalError(e.message, res);&#10;}" description="Try catch for rest server" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rest:f" value="async $FUNC$(req, res) {&#10;    try{&#10;        $END$&#10;        return res.status(200).send({&#10;            success: true,&#10;            data: null&#10;        })&#10;    }catch(e){&#10;        return helper.internalError(res, e.message);&#10;    }&#10;}" description="Restfull function" toReformat="true" toShortenFQNames="true">
    <variable name="FUNC" expression="" defaultValue="rest" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ts:f" value="async $FUNC$(req: Request, res: Response) {&#10;        try {&#10;            $END$&#10;        }&#10;        catch (e) {&#10;            console.error(e);&#10;            return res.send(ResponseTemplate.error({&#10;                code: ResponseCode.SERVER_INTERNAL_ERROR,&#10;                message: 'Server internal error',&#10;                error: e&#10;            }));&#10;        }&#10;    }" description="Typescript Resful function" toReformat="true" toShortenFQNames="true">
    <variable name="FUNC" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="model:f" value="async $FUNC$(data) {&#10;    try{&#10;        let jwt = data.jwt;&#10;        $END$&#10;        return ResponseTemplate.success({&#10;            data: null&#10;        })&#10;    }catch(e){&#10;        return ResponseTemplate.internalError(e.message);&#10;    }&#10;}" description="model function" toReformat="true" toShortenFQNames="true">
    <variable name="FUNC" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>